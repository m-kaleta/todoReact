{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","checked","date","handleText","e","setState","target","value","handleCheckBox","handleDate","handleClick","props","add","maxDate","this","className","type","placeholder","onChange","id","htmlFor","min","max","onClick","Component","Task","task","active","important","finishDate","style","color","change","delete","finish","toLocaleString","TaskList","tasks","filter","done","activeTasks","map","key","doneTasks","length","App","counter","changeTask","forEach","getTime","deleteTask","index","findIndex","splice","addTask","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a037b536.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AddTask extends Component {\r\n\r\n    minDate = new Date().toISOString().slice(0,10)\r\n    state = {\r\n      text: \"\",\r\n      checked: false,\r\n      date: this.minDate\r\n\r\n    }\r\n\r\n\r\n    handleText = (e) => {\r\n      this.setState({\r\n        text: e.target.value\r\n      })\r\n    }\r\n\r\n    handleCheckBox = (e) => {\r\n      this.setState({\r\n        checked: e.target.checked\r\n      })\r\n    }\r\n\r\n    handleDate = (e) => {\r\n      this.setState({\r\n        date: e.target.value\r\n      })\r\n    }\r\n\r\n    handleClick = () => {\r\n      const { text, date, checked} = this.state\r\n      const add = this.props.add(text, date, checked)\r\n      if (add) {\r\n        this.setState({\r\n          text: \"\",\r\n          checked: false,\r\n          date: this.minDate\r\n        })\r\n      }\r\n    }\r\n\r\n    render() {\r\n\r\n    let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n    maxDate = maxDate + \"-12-31\";\r\n\r\n    return(\r\n        <div className=\"form\">\r\n        <input type=\"text\" placeholder=\" wpisz zadanie\" value={this.state.text} onChange={this.handleText}/>\r\n        <input type=\"checkbox\" id=\"important\" checked={this.state.checked} onChange={this.handleCheckBox}/>\r\n        <label htmlFor=\"important\">Piorytet</label>\r\n        <br/>\r\n        <label htmlFor=\"date\">Do kiedy zrobić</label>\r\n        <input type=\"date\" value={this.state.date} min={this.state.date} max={maxDate} onChange={this.handleDate}/>\r\n        <br/>\r\n        <button onClick={this.handleClick}>Dodaj</button>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddTask","import React from 'react';\r\n\r\nconst Task = (props) => {\r\n\r\n    const style = {\r\n        color: \"red\"\r\n    }\r\n\r\n    const { text, date, id, active, important, finishDate} = props.task\r\n\r\n    if(active) {\r\n    return (\r\n        <div>\r\n            <p>\r\n                <strong style={important ? style : null }>{text}</strong> - do <span>{date} </span> \r\n                <button onClick={() => props.change(id)}>Zostało wykonane</button>\r\n                <button onClick={() => props.delete(id)}>X</button>\r\n            </p>\r\n        </div>\r\n    );} else {\r\n\r\n        const finish = new Date(finishDate).toLocaleString()\r\n        \r\n        return(\r\n        <div>\r\n            <p>\r\n                <strong>{text}</strong> <em>(zrobić do {date}) </em>\r\n                <br/>\r\n                - potwierdzenie wykonania {finish}\r\n                <button onClick={() => props.delete(id)}>X</button>\r\n            </p>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default Task","import React from 'react';\r\nimport Task from './Task';\r\n\r\nconst TaskList = (props) => {\r\n\r\n    const active = props.tasks.filter(task => task.active);\r\n    const done = props.tasks.filter(task => !task.active);\r\n\r\n    const activeTasks = active.map(task => <Task \r\n    key={task.id}\r\n    task={task}\r\n    delete={props.delete}\r\n    change={props.change}\r\n    />)\r\n\r\n    const doneTasks = done.map(task => <Task \r\n    key={task.id}\r\n    task={task}\r\n    delete={props.delete}\r\n    change={props.change}\r\n    />)\r\n\r\n    return (\r\n        <>\r\n        <div className=\"active\">\r\n            <h1>Zadania do zrobienia</h1>\r\n            {activeTasks.length > 0 ? activeTasks : <p>Brawo wykonaleś wszystkie zadania :)</p>}\r\n        </div>\r\n\r\n        <br/>\r\n\r\n        <div className=\"done\">\r\n            <h3>Zadania zrobione ({done.length})</h3>\r\n            {doneTasks}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React, { Component } from 'react';\nimport './App.css';\nimport AddTask from './AddTask'\nimport TaskList from './TaskList'\n\nclass App extends Component {\n    counter = 5\n  state = {\n    tasks: [\n      {id: 0, text: \"Zagrać w League of Legends\", date: \"2020-04-07\", active: true, important: false, finishDate: null},\n      {id: 1, text: \"Iść na siłownie\", date: \"2020-12-12\", active: true, important: true, finishDate: null},\n      {id: 2, text: \"Posprzątać auto\", date: \"2020-11-22\", active: true, important: false, finishDate: null},\n      {id: 3, text: \"Zrobić obiadek\", date: \"2020-05-07\", active: true, important: true, finishDate: null},\n      {id: 4, text: \"Spanko!\", date: \"2020-04-01\", active: true, important: false, finishDate: null},\n    ]\n  }\n\n  changeTask = (id) => {\n    const tasks = [...this.state.tasks]\n    tasks.forEach(task => {\n      if(task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime()\n      }\n    })\n    this.setState({\n      tasks\n    })\n  }\n  \n  deleteTask = (id) => {\n    const tasks = [...this.state.tasks]\n    const index = tasks.findIndex(task => task.id === id)\n    tasks.splice(index, 1)\n    this.setState({\n      tasks\n    })\n  }\n\n  addTask = (text, date, important) => {\n    const task = {\n      id: this.counter,\n      text,\n      date,\n      important,\n      active: true,\n      finishDate: null\n    }\n\n    this.counter++\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, task]\n    }))\n    return true\n  }\n\n\n  render() {\n  return (\n    <div className=\"App\">\n      <AddTask add={this.addTask}/>\n      <TaskList tasks={this.state.tasks} delete={this.deleteTask} change={this.changeTask} />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}